#include <BigNumber.h>

long randnumber;


// constants won't change. Used here to set a pin number:
const int ledPin =  LED_BUILTIN;// the number of the LED pin

// Variables will change:
int ledState = LOW;             // ledState used to set the LED

// Generally, you should use "unsigned long" for variables that hold time
// The value will quickly become too large for an int to store
unsigned long previousMicros = 0;        // will store last time LED was updated

// constants won't change:
const long interval = 500;           // interval at which to blink (microseconds)
void printBignum (BigNumber & n)
{
  char * s = n.toString ();
  Serial.println (s);
  free (s);
}  // end of printBignum

//randomSeed(analogRead(0));

void setup() {
  // set the digital pin as output:
  pinMode(ledPin, OUTPUT);
  BigNumber::begin ();  // initialize library
  Serial.begin(9600);
  BigNumber a = 2;
  randomSeed(analogRead(0));
}
BigNumber a = random(1000, 10000);
void loop() {
  // here is where you'd put code that needs to be running all the time.

  // check to see if it's time to blink the LED; that is, if the difference
  // between the current time and last time you blinked the LED is bigger than
  // the interval at which you want to blink the LED.

  for (int i = 1; i <= 300; i++) {
    unsigned long currentMicros = micros();
    if (currentMicros - previousMicros >= interval) {
      // save the last time you blinked the LED
      previousMicros = currentMicros;

      // if the LED is off turn it on and vice-versa:
      if (ledState == LOW) {
        ledState = HIGH;
      } else {
        ledState = LOW;
      }
      // set the LED with the ledState of the variable:
      digitalWrite(ledPin, ledState);
    }
    else {
      Serial.print(a);
      Serial.print("^");
      Serial.print(i);
      Serial.print(" = ");
      BigNumber p = a.pow(i);
      printBignum(p);
    };


  };
  a = random(1000, 10000);
};
